[{"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/index.js":"1","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/reportWebVitals.js":"2","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/App.js":"3","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/containers/MainContainer.js":"4","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightList.js":"5","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/SearchForm.js":"6","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/NavBar.js":"7","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/UserGraph.js":"8","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/About.js":"9","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/Home.js":"10","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightSearchResult.js":"11","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/Services/FlightService.js":"12","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightItem.js":"13","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightDetail.js":"14","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/data/airports.js":"15"},{"size":535,"mtime":1689627056852,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1689627056852,"results":"18","hashOfConfig":"17"},{"size":185,"mtime":1689627056851,"results":"19","hashOfConfig":"17"},{"size":3377,"mtime":1689683757577,"results":"20","hashOfConfig":"17"},{"size":1116,"mtime":1689685411466,"results":"21","hashOfConfig":"17"},{"size":2718,"mtime":1689683757577,"results":"22","hashOfConfig":"17"},{"size":343,"mtime":1689684344621,"results":"23","hashOfConfig":"17"},{"size":1645,"mtime":1689684417251,"results":"24","hashOfConfig":"17"},{"size":1279,"mtime":1689685186542,"results":"25","hashOfConfig":"17"},{"size":1493,"mtime":1689685381370,"results":"26","hashOfConfig":"17"},{"size":454,"mtime":1689683757577,"results":"27","hashOfConfig":"17"},{"size":724,"mtime":1689627056851,"results":"28","hashOfConfig":"17"},{"size":802,"mtime":1689685673423,"results":"29","hashOfConfig":"17"},{"size":420,"mtime":1689683757576,"results":"30","hashOfConfig":"17"},{"size":3814,"mtime":1689627056852,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a1nwrn",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/index.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/reportWebVitals.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/App.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/containers/MainContainer.js",["81","82","83","84"],[],"import React, { useEffect, useState } from \"react\";\nimport SearchForm from \"../components/SearchForm\";\nimport { getFlights, postFlight } from \"../Services/FlightService\";\nimport FlightList from \"../components/FlightList\";\nimport FlightSearchResult from \"../components/FlightSearchResult\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport About from \"../components/About\";\nimport Home from \"../components/Home\";\nimport UserGraph from \"../components/UserGraph\";\nimport Chart from \"chart.js/auto\";\n\nconst MainContainer = () => {\n  const [userFlights, setUserFlights] = useState([]);\n  const [origin, setOrigin] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [emissions, setEmissions] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [arrivalDate, setArrivalDate] = useState(\"\");\n  const [searchSuccessful, setSearchSuccessful] = useState(false);\n\n  const API_KEY = \"7a2256a8afcf280c53cb5763\";\n\n  function getFlightEmissions(origin, destination) {\n    let URL = `https://api.goclimate.com/v1/flight_footprint?segments[0][origin]=${origin}&segments[0][destination]=${destination}&segments[1][origin]=${destination}&segments[1][destination]=${origin}&cabin_class=economy`;\n    fetch(URL, {\n      method: \"GET\",\n      headers: { Authorization: \"Basic \" + btoa(API_KEY) },\n    }).then((response) => {\n      response.json().then((result) => {\n        console.log(result);\n        setEmissions(result.footprint);\n        setSearchSuccessful(true);\n      });\n    });\n  }\n\n  const addSearchedFlight = () => {\n    const newFlight = {\n      origin: origin,\n      destination: destination,\n      footprint: emissions,\n      date: date,\n      arrivalDate: arrivalDate,\n    };\n\n    postFlight(newFlight).then(addFlight(newFlight));\n  };\n\n  useEffect(() => {\n    getFlights().then((allFlights) => {\n      setUserFlights(allFlights);\n    });\n  }, []);\n\n  const addFlight = (flight) => {\n    setUserFlights([...userFlights, flight]);\n  };\n\n  const removeFlight = (id) => {\n    const flightsToKeep = userFlights.filter((f) => f._id !== id);\n    setUserFlights(flightsToKeep);\n  };\n\n  return (\n    <>\n      <Router>\n        <NavBar />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                origin={origin}\n                setOrigin={setOrigin}\n                destination={destination}\n                setDestination={setDestination}\n                getFlightEmissions={getFlightEmissions}\n                emissions={emissions}\n                searchSuccessful={searchSuccessful}\n                addSearchedFlight={addSearchedFlight}\n                addFlight={addFlight}\n                userFlights={userFlights}\n                removeFlight={removeFlight}\n                setDate={setDate}\n                date={date}\n                arrivalDate={arrivalDate}\n                setArrivalDate={setArrivalDate}\n              />\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n          <Route\n            path=\"/flightlist\"\n            element={\n              <FlightList\n                userFlights={userFlights}\n                removeFlight={removeFlight}\n              />\n            }\n          />\n        </Routes>\n      </Router>\n    </>\n  );\n};\n\nexport default MainContainer;\n","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightList.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/SearchForm.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/NavBar.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/UserGraph.js",["85"],[],"import React from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { Line } from \"react-chartjs-2\";\nimport 'chartjs-adapter-date-fns';\n\nconst UserGraph = ({userFlights}) => {\n  \n    const labels = userFlights.map((flight) => {\n              return flight.date;\n            })\n\n    labels.sort((a,b) => Date.parse(b) - Date.parse(a))\n\n    const footprintData = userFlights.map((flight) => {\n            return flight.footprint;\n    })\n\n    const privateJetFootprintData = userFlights.map((flight) => {\n      return flight.footprint * 100;\n})\n\n    const options = {\n      legend: {\n        display: false,\n        align: 'start',\n      },\n      scales: {\n        x: {\n          type: 'time',\n          time: {\n            unit: 'month'\n          }\n        },\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n\n          label: \"Your Footprint\",\n          backgroundColor: \"rgb(255, 99, 132)\",\n          borderColor: \"rgb(255, 99, 132)\",\n          data: footprintData,\n          tension: 0.2,\n          fill: true,\n          parsing:{\n            xAxisKey: 'date',\n            yAxisKey: 'footprint'\n          }},\n          {\n            label: 'Private Jet Equivelant',\n            data: privateJetFootprintData,\n            borderWidth: 1,\n            fill: true, \n            hidden: true,\n            tension: 0.2,\n            parsing: {\n              xAxisKey: 'date',\n              yAxisKey: 'footprint'\n            }\n          },\n      ],\n    }\n\nreturn (\n    <div>\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n\nexport default UserGraph;","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/About.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/Home.js",["86","87","88"],[],"import React, { useState } from 'react';\nimport FlightSearchResult from \"./FlightSearchResult\";\nimport FlightList from \"./FlightList\";\nimport SearchForm from \"./SearchForm\";\nimport UserGraph from \"./UserGraph\";\nimport Modal from 'react-modal';\n\nconst Home = ({ setDate, date, origin, setOrigin, destination, setDestination, getFlightEmissions, emissions, searchSuccessful, addSearchedFlight, userFlights, arrivalDate, setArrivalDate }) => {\n  const data = [2,3,4,5];\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal(){\n    setIsOpen(false);\n  }\n\n  return (\n    <div>\n      <h2>Main Container</h2>\n      <SearchForm\n        origin={origin}\n        setOrigin={setOrigin}\n        destination={destination}\n        setDestination={setDestination}\n        setDate={setDate}\n        getFlightEmissions={getFlightEmissions}\n        openModal={openModal}\n        arrivalDate={arrivalDate}\n        setArrivalDate={setArrivalDate}\n      />\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n      >\n        <button onClick={closeModal}>close</button>\n        <FlightSearchResult\n          origin={origin}\n          destination={destination}\n          emissions={emissions}\n          searchSuccessful={searchSuccessful}\n          addSearchedFlight={addSearchedFlight}\n          date={date}\n          arrivalDate={arrivalDate}\n        />\n      </Modal>\n\n      \n    </div>\n  );\n}\n\nexport default Home;\n","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightSearchResult.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/Services/FlightService.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightItem.js",["89"],[],"import React from \"react\";\nimport { deleteFlight } from \"../Services/FlightService\";\nimport MainContainer from \"../containers/MainContainer\";\n\nconst FlightItem = ({ flight, removeFlight, viewTrip }) => {\n\n\n  const handleDelete = () => {\n    deleteFlight(flight._id).then(() => {\n      removeFlight(flight._id);\n    });\n  };\n\n  const handleViewTrip = () => {\n    viewTrip(flight);\n\n  };\n\n\n  return (\n    <div>\n      <h2>Flight Deets</h2>\n      <p>{flight.origin}</p>\n      <p>{flight.destination}</p>\n      <p>{flight.footprint}</p>\n      <p>{flight.date}</p>\n      <p>{flight.arrivalDate}</p>\n      <p>{(flight.footprint * 0.7) / 21}</p>\n\n      <button onClick={handleDelete}>Delete Trip</button>\n      <button onClick={handleViewTrip}>View Trip</button>\n    </div>\n  );\n};\n\nexport default FlightItem;\n","/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/components/FlightDetail.js",[],[],"/Users/markslorach/Desktop/CodeClan_Work/javascript_group_project/client/src/data/airports.js",[],[],{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":18},{"ruleId":"90","severity":1,"message":"94","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":26},{"ruleId":"90","severity":1,"message":"95","line":11,"column":8,"nodeType":"92","messageId":"93","endLine":11,"endColumn":17},{"ruleId":"90","severity":1,"message":"96","line":12,"column":8,"nodeType":"92","messageId":"93","endLine":12,"endColumn":13},{"ruleId":"90","severity":1,"message":"96","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":13},{"ruleId":"90","severity":1,"message":"97","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":18},{"ruleId":"90","severity":1,"message":"95","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":17},{"ruleId":"90","severity":1,"message":"98","line":9,"column":9,"nodeType":"92","messageId":"93","endLine":9,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":21},"no-unused-vars","'SearchForm' is defined but never used.","Identifier","unusedVar","'FlightSearchResult' is defined but never used.","'UserGraph' is defined but never used.","'Chart' is defined but never used.","'FlightList' is defined but never used.","'data' is assigned a value but never used.","'MainContainer' is defined but never used."]
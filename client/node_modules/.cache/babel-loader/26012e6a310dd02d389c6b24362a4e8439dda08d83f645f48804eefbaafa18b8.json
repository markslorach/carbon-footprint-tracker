{"ast":null,"code":"var _jsxFileName = \"/Users/iainmccall/javascript_group_project/client/src/components/UserGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flights = [{\n  date: '2020-06-30',\n  footprint: '5000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}, {\n  date: '2021-08',\n  footprint: '8000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}, {\n  date: '2022',\n  footprint: '3000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}, {\n  date: '2023',\n  footprint: '9000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}];\nconst averagePersonFlights = [{\n  date: '2020-06-30',\n  footprint: '3000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}, {\n  date: '2021-08',\n  footprint: '6000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}, {\n  date: '2022',\n  footprint: '4000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}, {\n  date: '2023',\n  footprint: '5000',\n  origin: 'GLA',\n  destination: 'ABZ'\n}];\n\n//         const dates = flights.map((flight) => {\n//           return flight.date;\n//         })\n\n//         const footprints = flights.map((flight) => {\n//           return flight.footprint;\n//         })\n\n//         const footprints_2 = flights.map((flight) => {\n//           return flight.footprint + 2000;\n//         })\n\n//         const data = [\n//             {labels: dates},\n//             {datasets: footprints}\n//     ];\n\n//         console.log(dates)\n\n//         const ctx = document.getElementById('myChart');\n//         new Chart(ctx, {\n//         //   SETUP\n//           type: 'line',\n\n//         //   DATA\n\n//           data: {\n//             labels: dates,\n//             datasets: [{\n//               label: 'Carbon Footprint',\n//               data: flights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.2,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             },{\n//               label: 'Average Carbon Footprint',\n//               data: averagePersonFlights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.3,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             }\n//         ]\n//           },\n//           options: {\n//             scales: {\n//                 x: {\n//                 type: 'time',\n//                 time: {\n//                     unit: 'month'\n//                 }\n//               },\n//               y: {\n//                 beginAtZero: true\n//               },\n\n//             }\n//           }\n//         });\n\n// const UserGraph = () => {\n//   return (\n//     <div>UserGraph</div>\n//   )\n// }\n\nfunction PieChart({\n  chartData\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData,\n      options: {\n        plugins: {\n          title: {\n            display: true,\n            text: \"Users Gained between 2016-2020\"\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n//   export default PieChart;\n_c = PieChart;\nexport default UserGraph;\nvar _c;\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","flights","date","footprint","origin","destination","averagePersonFlights","PieChart","chartData","className","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Pie","data","options","plugins","title","display","text","_c","UserGraph","$RefreshReg$"],"sources":["/Users/iainmccall/javascript_group_project/client/src/components/UserGraph.js"],"sourcesContent":["import React from 'react'\nimport Chart from 'chart.js/auto'\n\nconst flights = [{date: '2020-06-30', footprint: '5000', origin: 'GLA', destination: 'ABZ'}, {date: '2021-08', footprint: '8000', origin: 'GLA', destination: 'ABZ'},{date: '2022', footprint: '3000', origin: 'GLA', destination: 'ABZ'},{date: '2023', footprint: '9000', origin: 'GLA', destination: 'ABZ'}]\n\nconst averagePersonFlights = [{date: '2020-06-30', footprint: '3000', origin: 'GLA', destination: 'ABZ'}, {date: '2021-08', footprint: '6000', origin: 'GLA', destination: 'ABZ'},{date: '2022', footprint: '4000', origin: 'GLA', destination: 'ABZ'},{date: '2023', footprint: '5000', origin: 'GLA', destination: 'ABZ'}]\n        \n//         const dates = flights.map((flight) => {\n//           return flight.date;\n//         })\n\n//         const footprints = flights.map((flight) => {\n//           return flight.footprint;\n//         })\n\n//         const footprints_2 = flights.map((flight) => {\n//           return flight.footprint + 2000;\n//         })\n\n//         const data = [\n//             {labels: dates},\n//             {datasets: footprints}\n//     ];\n        \n//         console.log(dates)\n        \n//         const ctx = document.getElementById('myChart');\n//         new Chart(ctx, {\n//         //   SETUP\n//           type: 'line',\n\n//         //   DATA\n    \n//           data: {\n//             labels: dates,\n//             datasets: [{\n//               label: 'Carbon Footprint',\n//               data: flights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.2,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             },{\n//               label: 'Average Carbon Footprint',\n//               data: averagePersonFlights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.3,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             }\n//         ]\n//           },\n//           options: {\n//             scales: {\n//                 x: {\n//                 type: 'time',\n//                 time: {\n//                     unit: 'month'\n//                 }\n//               },\n//               y: {\n//                 beginAtZero: true\n//               },\n           \n//             }\n//           }\n//         });\n\n// const UserGraph = () => {\n//   return (\n//     <div>UserGraph</div>\n//   )\n// }\n\nfunction PieChart({ chartData }) {\n    return (\n      <div className=\"chart-container\">\n        <h2 style={{ textAlign: \"center\" }}>Pie Chart</h2>\n        <Pie\n          data={chartData}\n          options={{\n            plugins: {\n              title: {\n                display: true,\n                text: \"Users Gained between 2016-2020\"\n              }\n            }\n          }}\n        />\n      </div>\n    );\n  }\n//   export default PieChart;\n\n\n\n\nexport default UserGraph"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAG,CAAC;EAACC,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAE;EAACH,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAC;EAACH,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAC;EAACH,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,CAAC;AAE/S,MAAMC,oBAAoB,GAAG,CAAC;EAACJ,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAE;EAACH,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAC;EAACH,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAC;EAACH,IAAI,EAAE,MAAM;EAAEC,SAAS,EAAE,MAAM;EAAEC,MAAM,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAK,CAAC,CAAC;;AAE5T;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASE,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAC7B,oBACER,OAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BV,OAAA;MAAIW,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDhB,OAAA,CAACiB,GAAG;MACFC,IAAI,EAAEV,SAAU;MAChBW,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR;QACF;MACF;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AACF;AAAAQ,EAAA,GAlBSjB,QAAQ;AAuBjB,eAAekB,SAAS;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
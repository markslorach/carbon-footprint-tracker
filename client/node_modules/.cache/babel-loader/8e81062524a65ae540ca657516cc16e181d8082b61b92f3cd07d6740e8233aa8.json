{"ast":null,"code":"var _jsxFileName = \"/Users/iainmccall/javascript_group_project/client/src/components/UserGraph.js\";\nimport React from 'react';\n\n// const flights = [{date: '2020-06-30', footprint: '5000', origin: 'GLA', destination: 'ABZ'}, {date: '2021-08', footprint: '8000', origin: 'GLA', destination: 'ABZ'},{date: '2022', footprint: '3000', origin: 'GLA', destination: 'ABZ'},{date: '2023', footprint: '9000', origin: 'GLA', destination: 'ABZ'}]\n\n// const averagePersonFlights = [{date: '2020-06-30', footprint: '3000', origin: 'GLA', destination: 'ABZ'}, {date: '2021-08', footprint: '6000', origin: 'GLA', destination: 'ABZ'},{date: '2022', footprint: '4000', origin: 'GLA', destination: 'ABZ'},{date: '2023', footprint: '5000', origin: 'GLA', destination: 'ABZ'}]\n\n//         const dates = flights.map((flight) => {\n//           return flight.date;\n//         })\n\n//         const footprints = flights.map((flight) => {\n//           return flight.footprint;\n//         })\n\n//         const footprints_2 = flights.map((flight) => {\n//           return flight.footprint + 2000;\n//         })\n\n//         const data = [\n//             {labels: dates},\n//             {datasets: footprints}\n//     ];\n\n//         console.log(dates)\n\n//         const ctx = document.getElementById('myChart');\n//         new Chart(ctx, {\n//         //   SETUP\n//           type: 'line',\n\n//         //   DATA\n\n//           data: {\n//             labels: dates,\n//             datasets: [{\n//               label: 'Carbon Footprint',\n//               data: flights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.2,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             },{\n//               label: 'Average Carbon Footprint',\n//               data: averagePersonFlights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.3,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             }\n//         ]\n//           },\n//           options: {\n//             scales: {\n//                 x: {\n//                 type: 'time',\n//                 time: {\n//                     unit: 'month'\n//                 }\n//               },\n//               y: {\n//                 beginAtZero: true\n//               },\n\n//             }\n//           }\n//         });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserGraph = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"UserGraph\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = UserGraph;\nexport default UserGraph;\nvar _c;\n$RefreshReg$(_c, \"UserGraph\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UserGraph","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iainmccall/javascript_group_project/client/src/components/UserGraph.js"],"sourcesContent":["import React from 'react'\n\n// const flights = [{date: '2020-06-30', footprint: '5000', origin: 'GLA', destination: 'ABZ'}, {date: '2021-08', footprint: '8000', origin: 'GLA', destination: 'ABZ'},{date: '2022', footprint: '3000', origin: 'GLA', destination: 'ABZ'},{date: '2023', footprint: '9000', origin: 'GLA', destination: 'ABZ'}]\n\n// const averagePersonFlights = [{date: '2020-06-30', footprint: '3000', origin: 'GLA', destination: 'ABZ'}, {date: '2021-08', footprint: '6000', origin: 'GLA', destination: 'ABZ'},{date: '2022', footprint: '4000', origin: 'GLA', destination: 'ABZ'},{date: '2023', footprint: '5000', origin: 'GLA', destination: 'ABZ'}]\n        \n//         const dates = flights.map((flight) => {\n//           return flight.date;\n//         })\n\n//         const footprints = flights.map((flight) => {\n//           return flight.footprint;\n//         })\n\n//         const footprints_2 = flights.map((flight) => {\n//           return flight.footprint + 2000;\n//         })\n\n//         const data = [\n//             {labels: dates},\n//             {datasets: footprints}\n//     ];\n        \n//         console.log(dates)\n        \n//         const ctx = document.getElementById('myChart');\n//         new Chart(ctx, {\n//         //   SETUP\n//           type: 'line',\n\n//         //   DATA\n    \n//           data: {\n//             labels: dates,\n//             datasets: [{\n//               label: 'Carbon Footprint',\n//               data: flights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.2,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             },{\n//               label: 'Average Carbon Footprint',\n//               data: averagePersonFlights,\n//               borderWidth: 1,\n//               fill: true, \n//               tension: 0.3,\n//               parsing: {\n//                 xAxisKey: 'date',\n//                 yAxisKey: 'footprint'\n//               }\n//             }\n//         ]\n//           },\n//           options: {\n//             scales: {\n//                 x: {\n//                 type: 'time',\n//                 time: {\n//                     unit: 'month'\n//                 }\n//               },\n//               y: {\n//                 beginAtZero: true\n//               },\n           \n//             }\n//           }\n//         });\n\nconst UserGraph = () => {\n  return (\n    <div>UserGraph</div>\n  )\n}\n\nexport default UserGraph"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACED,OAAA;IAAAE,QAAA,EAAK;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAExB,CAAC;AAAAC,EAAA,GAJKN,SAAS;AAMf,eAAeA,SAAS;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}